---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Forecast the PMT wage tax

## Prepare the wage data

Wage data are quarterly and end in 2022q4. Tax data are monthly and end in April 2023. We want to have a common start point for the forecast period. There is information in the Jan-Mar 2023 tax data that we want to exploit to do a rough estimate of 2023q1 wages - essentially running the model backwards by forecasting wage data for 2023q1 based on tax data for Jan-Mar 2023 (plus prior trends.)

We run a simple ARIMA with regression errors model to "forecast" wages for 2023q1 - one model for NYC and one for MTA suburban. In each case, wages are on the lefthand side and tax revenue is on the right hand side. We estimate the model (in log terms) through 2022q4, and then forecast one quarter ahead to get an estimate of wages for 2023q1.


```{r}
#| label: includes
#| include: false

source(here::here("r", "libraries.r"))
source(here::here("r", "libraries_ts.r"))
source(here::here("r", "constants.r"))
source(here::here("r", "functions.r"))

```

```{=html}
<!-- links


-->
```


```{r}
#| label: get-data
#| eval: true
#| include: false

wagebase <- readRDS(here::here("data", "mta_wagebase.rds"))
pmt <- readRDS(here::here("data", "mta_pmt_collections.rds"))

```



```{r}
#| label: extend-wage-history
#| eval: true
#| include: false


pmt_qtr <- pmt |> 
  filter(vname=="pmt_wage", year(date) >= 2010) |> 
  mutate(date=fdoq(date)) |> 
  summarise(pmt=sum(value), .by = date)

wagebase2 <- wagebase |> 
  filter(region %in% c("nyc", "suburban"), year(date)>=2010, name=="totwage") |> 
  summarise(pmtwage=sum(pmtbase), .by=c(date, region))

modbase1 <- wagebase2 |> 
  left_join(pmt_qtr, by = join_by(date))
skim(modbase1)
glimpse(modbase1)
ht(modbase1)

modbase2 <- modbase1 |> 
  mutate(date=yearquarter(date)) |> 
  as_tsibble(key=region, index = date)
  
interval(modbase2)
# summary(modbase2)

mod1a <- modbase2 |> 
  model(arima=ARIMA(log(pmtwage) ~ log(pmt))) 
report(mod1a)

mod1a |> filter(region=="nyc") |> report()
mod1a |> filter(region=="suburban") |> report()

newdata <- tibble(region=c("nyc", "suburban"), date=as.Date("2023-01-01")) |> 
  left_join(pmt_qtr, by = join_by(date)) |> 
  mutate(date=yearquarter(date)) |> 
  as_tsibble(key=region, index = date) 

fc1a <- forecast(mod1a, new_data = newdata)
fc1a

fc1a |> as_tsibble()
fc1a |> as_tsibble() |> select(region, date, pmtwage=.mean, pmt)

modbase2 |>
  autoplot(pmtwage) +
  autolayer(fc1a) +
  theme_bw()

wagestack <- 
  bind_rows(modbase2 |> mutate(type="history"),
            fc1a |> as_tsibble() |> select(region, date, pmtwage=.mean, pmt) |> mutate(type="forecast")) 

wagestack |> tail()



```


Here are the results of estimating wages for 2023q1.

```{r}
#| label: show-wage-forecast
#| eval: true
#| include: true
#| fig-height: 8

wagestack |> filter(year(date) %in% 2022:2023)

wagestack |> 
  filter(year(date) %in% 2019:2023) |> 
  gg_season(pmtwage) +
  geom_line(linewidth=1) +
  geom_point(size=2) +
  scale_y_continuous(name="PMT wage base ($ billions)", labels = label_comma(scale=1e-9, accuracy=1)) +
  labs(x="") +
  ggtitle("PMT wage base including estimate for 2023q1") +
  facet_wrap(~region, scales = "free_y", ncol=1) +
  theme_bw()


```


## Fit tax revenue models

We're going to model tax revenue as regression with ARIMA errors, as a function of total MTA wages.

We'll fit from Jan 2010 through March 2023.

We'll convert wages to monthly by simply using the quarterly average wage.

We'll also fit simple ARIMA and ETS models without wages on the RHS.


```{r}
#| label: fit-tax-model
#| eval: true
#| include: true

# prepare the wage base
wage1 <- 
  wagestack |> 
  as_tibble() |> 
  filter(region %in% c("nyc", "suburban")) |> 
  summarise(pmtwage=sum(pmtwage), .by=date)

pmtbase <- pmt |> 
  filter(vname=="pmt_wage", year(date) >= 2010) |> 
  select(date, pmt=value) |> 
  arrange(date) |> 
  left_join(wage1, by = join_by(date)) |> 
  # we need monthly wages
  fill(pmtwage, .direction = "down") |> 
  mutate(pmtwage=pmtwage / 3)
ht(pmtbase)
sum(duplicated(pmtbase$date))
glimpse(pmtbase)
class(pmtbase)

modbase <- pmtbase |> 
  mutate(date=yearmonth(date)) |> 
  as_tsibble(index=date)

pmtmod <- modbase |> 
  model(arima=ARIMA(log(pmt) ~ log(pmtwage))) 
pmtmod |> report()

skim(pmtbase)

modbaseq <- pmtbase |>
  filter(date <= as.Date("2023-03-01")) |> 
  mutate(date=yearquarter(date)) |> 
  summarise(across(c(pmt, pmtwage), sum), .by=date) |> 
  as_tsibble(index=date)

pmtmodq <- modbaseq |> 
  model(arima=ARIMA(log(pmt) ~ log(pmtwage))) 
pmtmodq |> report()


# create some new wage data ----
nycgr <- .04
suburbangr <- .02

(dates <- seq.Date(as.Date("2022-01-01"), by="quarter", length.out = 16) |> yearquarter())
nd1 <- tibble(date=dates) |> 
  left_join(wagestack |> 
              filter(region %in% c("nyc", "suburban")) |>
              select(date, region, pmtwage) |> 
              pivot_wider(names_from=region, values_from=pmtwage),
            by = join_by(date)) 

nd2 <- nd1 |> 
  filter(row_number()>=2) |> 
  mutate(qtr=quarter(date)) |> 
  arrange(qtr, date) |>
  mutate(nycgr=(1 +nycgr)^(row_number() - 1),
         nyc=nyc[1]*nycgr,
         subgr=(1 +suburbangr)^(row_number() - 1),
         suburban=suburban[1]*subgr,
         .by=qtr) |> 
  arrange(date)
nd2


newdata <- nd2 |> 
  select(date, nyc, suburban) |> 
  mutate(pmtwage=nyc + suburban) |> 
  arrange(date) |> 
  filter(date >= yearquarter(as.Date("2023-04-01"))) |> 
  as_tsibble(index = date) 



pmtfc <- forecast(pmtmodq, new_data = newdata)
pmtfc

fc1a |> as_tsibble()
fc1a |> as_tsibble() |> select(region, date, pmtwage=.mean, pmt)

modbaseq |>
  autoplot(pmt) +
  autolayer(pmtfc) +
  theme_bw()




fc1a <- forecast(mod1a, new_data = newdata)
  


pmtbase <- pmt |> 
  filter(vname=="pmt_wage", year(date) >= 2010)

```




